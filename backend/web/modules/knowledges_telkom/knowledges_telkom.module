<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\node\Entity\Node;
use Drupal\Core\Field\FieldItemListInterface;
use Drupal\Core\Entity\FieldableEntityInterface;

/**
 * @file
 * Contains knowledges_telkom.module.
 */

function knowledges_telkom_form_node_citem_product_knowledge_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
    if (isset($_GET['ctm_id']) && isset($_GET['ctm_pknowledge_parent'])) {
        $template = Node::load($_GET['ctm_pknowledge_parent'])->toArray();
        $ctm = Node::load($_GET['ctm_id']);
        // if (str_contains($body, '%pct_name%')) {
        //     $body = str_replace('%pct_name%', $pct->toArray()['title'][0]['value'], $body);
        // }

        $form['title']['widget'][0]['value']['#default_value'] = $template['title'][0]['value'];
        $form['field_pkt_pknowledge_body']['widget'][0]['#default_value'] = $template['body'][0]['value'];
        $form['field_pkt_pknowledge_parent']['widget'][0]['target_id']['#default_value'] = $ctm;
        $form['field_pkt_pknowledge_parent']['#access'] = false;
    }
}

function knowledges_telkom_form_node_ebis_product_knowledge_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
    if (isset($_GET['ebis_id']) && isset($_GET['ebis_pknowledge_parent'])) {
        $template = Node::load($_GET['ebis_pknowledge_parent'])->toArray();
        $ebis = Node::load($_GET['ebis_id']);
        // if (str_contains($body, '%pct_name%')) {
        //     $body = str_replace('%pct_name%', $pct->toArray()['title'][0]['value'], $body);
        // }

        $form['title']['widget'][0]['value']['#default_value'] = $template['title'][0]['value'];
        $form['field_pkt_pknowledge_body']['widget'][0]['#default_value'] = $template['body'][0]['value'];
        $form['field_pkt_pknowledge_parent']['widget'][0]['target_id']['#default_value'] = $ebis;
        $form['field_pkt_pknowledge_parent']['#access'] = false;
    }
}

function knowledges_telkom_form_node_wibs_product_knowledge_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
    if (isset($_GET['wibs_id']) && isset($_GET['wibs_pknowledge_parent'])) {
        $template = Node::load($_GET['wibs_pknowledge_parent'])->toArray();
        $wibs = Node::load($_GET['wibs_id']);
        // if (str_contains($body, '%pct_name%')) {
        //     $body = str_replace('%pct_name%', $pct->toArray()['title'][0]['value'], $body);
        // }

        $form['title']['widget'][0]['value']['#default_value'] = $template['title'][0]['value'];
        $form['field_pkt_pknowledge_body']['widget'][0]['#default_value'] = $template['body'][0]['value'];
        $form['field_pkt_pknowledge_parent']['widget'][0]['target_id']['#default_value'] = $wibs;
        $form['field_pkt_pknowledge_parent']['#access'] = false;
    }
}

function knowledges_telkom_form_node_paket_product_knowledge_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
    if (isset($_GET['pkt_id']) && isset($_GET['pkt_pknowledge_parent'])) {
        $template = Node::load($_GET['pkt_pknowledge_parent'])->toArray();
        $pkt = Node::load($_GET['pkt_id']);
        // if (str_contains($body, '%pct_name%')) {
        //     $body = str_replace('%pct_name%', $pct->toArray()['title'][0]['value'], $body);
        // }

        $form['title']['widget'][0]['value']['#default_value'] = $template['title'][0]['value'];
        $form['field_pkt_pknowledge_body']['widget'][0]['#default_value'] = $template['body'][0]['value'];
        $form['field_pkt_pknowledge_parent']['widget'][0]['target_id']['#default_value'] = $pkt;
        $form['field_pkt_pknowledge_parent']['#access'] = false;
    }
}

function knowledges_telkom_form_node_product_catalog_product_knowledg_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
    if (isset($_GET['pct_id']) && isset($_GET['pct_pknowledge_parent'])) {
        $template = Node::load($_GET['pct_pknowledge_parent'])->toArray();
        $pct = Node::load($_GET['pct_id']);
        // if (str_contains($body, '%pct_name%')) {
        //     $body = str_replace('%pct_name%', $pct->toArray()['title'][0]['value'], $body);
        // }

        $form['title']['widget'][0]['value']['#default_value'] = $template['title'][0]['value'];
        $form['field_pct_pknowledge_body']['widget'][0]['#default_value'] = $template['body'][0]['value'];
        $form['field_pct_pknowledge_parent']['widget'][0]['target_id']['#default_value'] = $pct;
        $form['field_pct_pknowledge_parent']['#access'] = false;
    }
}

function knowledges_telkom_form_node_segment_product_knowledge_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
    if (isset($_GET['seg_id']) && isset($_GET['seg_pknowledge_parent'])) {
        $template = Node::load($_GET['seg_pknowledge_parent'])->toArray();
        $seg = Node::load($_GET['seg_id']);
        // if (str_contains($body, '%seg_name%')) {
        //     $body = str_replace('%seg_name%', $seg->toArray()['title'][0]['value'], $body);
        // }

        $form['title']['widget'][0]['value']['#default_value'] = $template['title'][0]['value'];
        $form['field_seg_pknowledge_body']['widget'][0]['#default_value'] = $template['body'][0]['value'];
        $form['field_seg_pknowledge_parent']['widget'][0]['target_id']['#default_value'] = $seg;
        $form['field_seg_pknowledge_parent']['#access'] = false;
    }
}

/**
 * Altering query for ref views. Used when edit/add knowledge group 
 */
function knowledges_telkom_views_query_alter($view, $query)
{
  // for autocomplete in citem knowledge group
  // this form must have query string "citem_id" to be able to get option in autocomplete
  if ($view->id()==="ref_citem_product_knowledge") {
    foreach ($query->where as $i => &$condition_group) {
      foreach ($condition_group['conditions'] as &$condition) {
        if (strpos($condition['field'], 'field_pkt_pknowledge_parent_target_id')) {

          // get citem id
          $citem_id = 0;

          $query = parse_url(urldecode($_SERVER['HTTP_REFERER']))['query'];
          foreach (explode('&', $query) as $key_value) {
            $query_string = explode('=',$key_value, 2);
            if ($query_string[0]==='citem_id' && count($query_string)===2) {
                $citem_id = (int) $query_string[1];
            }
          }

          if (!empty($citem_id)) {
            $condition = [
              'field' => 'node__field_pkt_pknowledge_parent.field_pkt_pknowledge_parent_target_id',
              'value' => $citem_id,
              'operator' => '=',
            ];
          }
        }
      }
    }
  }

  // for autocomplete in ebis knowledge group
  // this form must have query string "id" to be able to get option in autocomplete
  else if ($view->id()==="ref_ebis_product_knowledge") {
    foreach ($query->where as $i => &$condition_group) {
      foreach ($condition_group['conditions'] as &$condition) {
        if (strpos($condition['field'], 'field_pkt_pknowledge_parent_target_id')) {

          // get ebis id
          $id = 0;

          $query = parse_url(urldecode($_SERVER['HTTP_REFERER']))['query'];
          foreach (explode('&', $query) as $key_value) {
            $query_string = explode('=',$key_value, 2);
            if ($query_string[0]==='id' && count($query_string)===2) {
                $id = (int) $query_string[1];
            }
          }

          if (!empty($id)) {
            $condition = [
              'field' => 'node__field_pkt_pknowledge_parent.field_pkt_pknowledge_parent_target_id',
              'value' => $id,
              'operator' => '=',
            ];
          }
        }
      }
    }
  }

  // for autocomplete in wibs knowledge group
  // this form must have query string "id" to be able to get option in autocomplete
  else if ($view->id()==="ref_wibs_product_knowledge") {
    foreach ($query->where as $i => &$condition_group) {
      foreach ($condition_group['conditions'] as &$condition) {
        if (strpos($condition['field'], 'field_pkt_pknowledge_parent_target_id')) {

          // get wibs id
          $id = 0;

          $query = parse_url(urldecode($_SERVER['HTTP_REFERER']))['query'];
          foreach (explode('&', $query) as $key_value) {
            $query_string = explode('=',$key_value, 2);
            if ($query_string[0]==='id' && count($query_string)===2) {
                $id = (int) $query_string[1];
            }
          }

          if (!empty($id)) {
            $condition = [
              'field' => 'node__field_pkt_pknowledge_parent.field_pkt_pknowledge_parent_target_id',
              'value' => $id,
              'operator' => '=',
            ];
          }
        }
      }
    }
  }

  // for autocomplete in paket knowledge group
  // this form must have query string "paket_id" to be able to get option in autocomplete
  else if ($view->id()==="ref_paket_product_knowledge") {
    foreach ($query->where as $i => &$condition_group) {
      foreach ($condition_group['conditions'] as &$condition) {
        if (strpos($condition['field'], 'field_pkt_pknowledge_parent_target_id')) {

          // get paket id
          $paket_id = 0;

          $query = parse_url(urldecode($_SERVER['HTTP_REFERER']))['query'];
          foreach (explode('&', $query) as $key_value) {
            $query_string = explode('=',$key_value, 2);
            if ($query_string[0]==='paket_id' && count($query_string)===2) {
                $paket_id = (int) $query_string[1];
            }
          }

          if (!empty($paket_id)) {
            $condition = [
              'field' => 'node__field_pkt_pknowledge_parent.field_pkt_pknowledge_parent_target_id',
              'value' => $paket_id,
              'operator' => '=',
            ];
          }
        }
      }
    }
  }

  // for autocomplete in catalog knowledge group
  // this form must have query string "catalog_id" to be able to get option in autocomplete
  else if ($view->id()==="ref_catalog_product_knowledge") {
    foreach ($query->where as $i => &$condition_group) {
      foreach ($condition_group['conditions'] as &$condition) {
        if (strpos($condition['field'], 'field_pct_pknowledge_parent_target_id ')) {

          // get catalog id
          $catalog_id = 0;

          $query = parse_url(urldecode($_SERVER['HTTP_REFERER']))['query'];
          foreach (explode('&', $query) as $key_value) {
            $query_string = explode('=',$key_value, 2);
            if ($query_string[0]==='catalog_id' && count($query_string)===2) {
                $catalog_id = (int) $query_string[1];
            }
          }

          if (!empty($catalog_id)) {
            $condition = [
              'field' => 'node__field_pct_pknowledge_parent.field_pct_pknowledge_parent_target_id',
              'value' => $catalog_id,
              'operator' => '=',
            ];
          }
        }
      }
    }
  }

  // for autocomplete in segment knowledge group
  // this form must have query string "segment_id" to be able to get option in autocomplete
  else if ($view->id()==="ref_segment_product_knowledge") {
    foreach ($query->where as $i => &$condition_group) {
      foreach ($condition_group['conditions'] as &$condition) {
        if (strpos($condition['field'], 'field_seg_pknowledge_parent_target_id ')) {

          // get segment id
          $segment_id = 0;

          $query = parse_url(urldecode($_SERVER['HTTP_REFERER']))['query'];
          foreach (explode('&', $query) as $key_value) {
            $query_string = explode('=',$key_value, 2);
            if ($query_string[0]==='segment_id' && count($query_string)===2) {
                $segment_id = (int) $query_string[1];
            }
          }

          if (!empty($segment_id)) {
            $condition = [
              'field' => 'node__field_seg_pknowledge_parent.field_seg_pknowledge_parent_target_id',
              'value' => $segment_id,
              'operator' => '=',
            ];
          }
        }
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for customize form.
 */
function knowledges_telkom_form_node_citem_knowledge_group_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  $node = !empty($_GET['citem_id']) && !empty((int)$_GET['citem_id']) ? Node::load((int) $_GET['citem_id']) : null;
  $citem = $node!==null && $node->type->entity->get('type')==='citem' ? $node : null;

  // citem_id is must
  if ($citem===null) {
    Drupal::service('media_upload.page_helper')->redirect($_ENV['APP_URL']);
  }

  // disabled access & set default value
  $form['field_pkt_knowledge_paket_ref']['#access'] = false;
  $form['field_pkt_knowledge_paket_ref']['widget'][0]['target_id']['#default_value'] = $citem;
}

/**
 * Implements hook_form_FORM_ID_alter() for customize form.
 */
function knowledges_telkom_form_node_citem_knowledge_group_edit_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  // disabled form access
  $form['field_pkt_knowledge_paket_ref']['#access'] = false;

  $citem_id = !empty($_GET['citem_id']) && !empty((int)$_GET['citem_id']) ? (int)$_GET['citem_id'] : null;

  $field = $form['field_pkt_knowledge_paket_ref']['widget'][0]['target_id']['#default_value'];
  if ($field && (int)$field->id() !== $citem_id) {
    $_GET['citem_id'] = $field->id();
    $url = $_ENV['APP_URL'] . explode('?', $_SERVER['REQUEST_URI'])[0] . '?' . http_build_query($_GET);
    Drupal::service('media_upload.page_helper')->redirect($url);
  }
}

function process_knowledge_group_form(&$form, FormStateInterface $form_state, $form_id, $node = null) {
  // node is must
  if ($node===null) {
    Drupal::service('media_upload.page_helper')->redirect($_ENV['APP_URL']);
  }

  // disabled access & set default value
  $form['field_pkt_knowledge_paket_ref']['#access'] = false;
  $form['field_pkt_knowledge_paket_ref']['widget'][0]['target_id']['#default_value'] = $node;
}

function process_knowledge_edit_form(&$form, FormStateInterface $form_state, $form_id) {
  // disabled form access
  $form['field_pkt_knowledge_paket_ref']['#access'] = false;

  $node_id = !empty($_GET['id']) && !empty((int)$_GET['id']) ? (int)$_GET['id'] : null;

  $field = $form['field_pkt_knowledge_paket_ref']['widget'][0]['target_id']['#default_value'];
  if ($field && (int)$field->id() !== $node_id) {
    $_GET['id'] = $field->id();
    $url = $_ENV['APP_URL'] . explode('?', $_SERVER['REQUEST_URI'])[0] . '?' . http_build_query($_GET);
    Drupal::service('media_upload.page_helper')->redirect($url);
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for customize form.
 */
function knowledges_telkom_form_node_ebis_knowledge_group_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  $node = !empty($_GET['id']) && !empty((int)$_GET['id']) ? Node::load((int) $_GET['id']) : null;
  $node = $node!==null && $node->type->entity->get('type')==='ebis' ? $node : null;

  process_knowledge_group_form($form, $form_state, $form_id, $node);
}

/**
 * Implements hook_form_FORM_ID_alter() for customize form.
 */
function knowledges_telkom_form_node_ebis_knowledge_group_edit_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  process_knowledge_edit_form($form, $form_state, $form_id);
}

/**
 * Implements hook_form_FORM_ID_alter() for customize form.
 */
function knowledges_telkom_form_node_wibs_knowledge_group_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  $node = !empty($_GET['id']) && !empty((int)$_GET['id']) ? Node::load((int) $_GET['id']) : null;
  $node = $node!==null && $node->type->entity->get('type')==='wibs' ? $node : null;

  process_knowledge_group_form($form, $form_state, $form_id, $node);
}

/**
 * Implements hook_form_FORM_ID_alter() for customize form.
 */
function knowledges_telkom_form_node_wibs_knowledge_group_edit_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  process_knowledge_edit_form($form, $form_state, $form_id);
}

/**
 * Implements hook_form_FORM_ID_alter() for customize form.
 */
function knowledges_telkom_form_node_paket_knowledge_group_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  $node = !empty($_GET['paket_id']) && !empty((int)$_GET['paket_id']) ? Node::load((int) $_GET['paket_id']) : null;
  $paket = $node!==null && $node->type->entity->get('type')==='paket' ? $node : null;

  // paket_id is must
  if ($paket===null) {
    Drupal::service('media_upload.page_helper')->redirect($_ENV['APP_URL']);
  }

  // disabled access & set default value
  $form['field_pkt_knowledge_paket_ref']['#access'] = false;
  $form['field_pkt_knowledge_paket_ref']['widget'][0]['target_id']['#default_value'] = $paket;
}

/**
 * Implements hook_form_FORM_ID_alter() for customize form.
 */
function knowledges_telkom_form_node_paket_knowledge_group_edit_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  // disabled form access
  $form['field_pkt_knowledge_paket_ref']['#access'] = false;

  $paket_id = !empty($_GET['paket_id']) && !empty((int)$_GET['paket_id']) ? (int)$_GET['paket_id'] : null;

  $field = $form['field_pkt_knowledge_paket_ref']['widget'][0]['target_id']['#default_value'];
  if ($field && (int)$field->id() !== $paket_id) {
    $_GET['paket_id'] = $field->id();
    $url = $_ENV['APP_URL'] . explode('?', $_SERVER['REQUEST_URI'])[0] . '?' . http_build_query($_GET);
    Drupal::service('media_upload.page_helper')->redirect($url);
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for customize form.
 */
function knowledges_telkom_form_node_catalog_knowledge_group_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  $node = !empty($_GET['catalog_id']) && !empty((int)$_GET['catalog_id']) ? Node::load((int) $_GET['catalog_id']) : null;
  $catalog = $node!==null && $node->type->entity->get('type')==='product_catalog' ? $node : null;

  // catalog_id is must
  if ($catalog===null) {
    Drupal::service('media_upload.page_helper')->redirect($_ENV['APP_URL']);
  }

  // disabled access & set default value
  $form['field_pct_knowledge_catalog_ref']['#access'] = false;
  $form['field_pct_knowledge_catalog_ref']['widget'][0]['target_id']['#default_value'] = $catalog;
}

/**
 * Implements hook_form_FORM_ID_alter() for customize form.
 */
function knowledges_telkom_form_node_catalog_knowledge_group_edit_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  // disabled form access
  $form['field_pct_knowledge_catalog_ref']['#access'] = false;

  $catalog_id = !empty($_GET['catalog_id']) && !empty((int)$_GET['catalog_id']) ? (int)$_GET['catalog_id'] : null;

  $field = $form['field_pct_knowledge_catalog_ref']['widget'][0]['target_id']['#default_value'];
  if ($field && (int)$field->id() !== $catalog_id) {
    $_GET['catalog_id'] = $field->id();
    $url = $_ENV['APP_URL'] . explode('?', $_SERVER['REQUEST_URI'])[0] . '?' . http_build_query($_GET);
    Drupal::service('media_upload.page_helper')->redirect($url);
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for customize form.
 */
function knowledges_telkom_form_node_segment_knowledge_group_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  $node = !empty($_GET['segment_id']) && !empty((int)$_GET['segment_id']) ? Node::load((int) $_GET['segment_id']) : null;
  $segment = $node!==null && $node->type->entity->get('type')==='segment' ? $node : null;

  // segment_id is must
  if ($segment===null) {
    Drupal::service('media_upload.page_helper')->redirect($_ENV['APP_URL']);
  }

  // disabled access & set default value
  $form['field_seg_knowledge_segment_ref']['#access'] = false;
  $form['field_seg_knowledge_segment_ref']['widget'][0]['target_id']['#default_value'] = $segment;
}

/**
 * Implements hook_form_FORM_ID_alter() for customize form.
 */
function knowledges_telkom_form_node_segment_knowledge_group_edit_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  // disabled form access
  $form['field_seg_knowledge_segment_ref']['#access'] = false;

  $segment_id = !empty($_GET['segment_id']) && !empty((int)$_GET['segment_id']) ? (int)$_GET['segment_id'] : null;

  $field = $form['field_seg_knowledge_segment_ref']['widget'][0]['target_id']['#default_value'];
  if ($field && (int)$field->id() !== $segment_id) {
    $_GET['segment_id'] = $field->id();
    $url = $_ENV['APP_URL'] . explode('?', $_SERVER['REQUEST_URI'])[0] . '?' . http_build_query($_GET);
    Drupal::service('media_upload.page_helper')->redirect($url);
  }
}

// altering module export content. Add capability export value from field workflow
function knowledges_telkom_content_export_field_value_alter(&$value, FieldItemListInterface $field) {
  if ($field->getName() === 'field_workflow_status') {
    $value = $field->getValue();
  }
}

function knowledges_telkom_content_import_field_value_alter(FieldableEntityInterface $entity, $field_name, $field_value) {
  if ($field_name === 'field_workflow_status') {
    $entity->field_workflow_status = $field_value;
    if ($entity->field_workflow_status->getString()!=='workflow_status_approve') {
      $entity->setUnpublished();
    }
    else{
      $entity->setPublished();
    }
  }
}